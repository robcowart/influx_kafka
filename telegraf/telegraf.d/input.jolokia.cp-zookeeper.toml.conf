########## Zookeeper ##########
[[inputs.jolokia2_agent]]

  # Add agents URLs to query
  urls = ["http://127.0.0.1:58771/jolokia"]
  # username = ""
  # password = ""
  # response_timeout = "5s"

  # Optional TLS config
  #tls_ca   = "/var/private/ca.pem"
  #tls_cert = "/var/private/client.pem"
  #tls_key  = "/var/private/client-key.pem"
  #insecure_skip_verify = false

  #name_prefix = ""
  #default_tag_prefix      = ""
  #default_field_prefix    = ""
  default_field_separator = "."
  
  tagexclude = ["jolokia_agent_url"]
  fielddrop = ["ClientPort","LastOperation","LastResponseTime","Name","QuorumAddress","SessionId","SourceIP","StartTime","Version"]

  # Jolokia Metric Configuration
  # Each metric declaration generates a Jolokia request to fetch telemetry from a JMX MBean.
  #   - mbean: [required] The object name of a JMX MBean. MBean property-key values can contain a wildcard *, allowing
  #       you to fetch multiple MBeans with one declaration.
  #   - paths: A list of MBean attributes to read.
  #   - tag_keys: A list of MBean property-key names to convert into tags. The property-key name becomes the tag name,
  #       while the property-key value becomes the tag value.
  #   - tag_prefix: A string to prepend to the tag names produced by this metric declaration.
  #   - field_name: A string to set as the name of the field produced by this metric; can contain substitutions.
  #   - field_prefix: A string to prepend to the field names produced by this metric declaration; can contain
  #       substitutions.

  ##### java.lang #####

  [[inputs.jolokia2_agent.metric]]
    name = "java.lang_ClassLoading"
    mbean = "java.lang:type=ClassLoading"
    paths = ["LoadedClassCount","UnloadedClassCount","TotalLoadedClassCount"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "java.lang_Compilation"
    mbean = "java.lang:type=Compilation"
    paths = ["TotalCompilationTime"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "java.lang_GarbageCollector"
    mbean = "java.lang:name=*,type=GarbageCollector"
    paths = ["CollectionTime","CollectionCount"]
    tag_keys = ["name"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "java.lang_Memory"
    mbean = "java.lang:type=Memory"
    paths = ["ObjectPendingFinalizationCount","HeapMemoryUsage","NonHeapMemoryUsage"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "java.lang_MemoryPool"
    mbean = "java.lang:name=*,type=MemoryPool"
    paths = ["Usage","PeakUsage","CollectionUsage"]
    tag_keys = ["name"]

  [[inputs.jolokia2_agent.metric]]
    name = "java.lang_OperatingSystem"
    mbean = "java.lang:type=OperatingSystem"
    paths = ["OpenFileDescriptorCount","CommittedVirtualMemorySize","FreePhysicalMemorySize","SystemLoadAverage","ProcessCpuLoad","FreeSwapSpaceSize","TotalPhysicalMemorySize","TotalSwapSpaceSize","ProcessCpuTime","MaxFileDescriptorCount","SystemCpuLoad","AvailableProcessors"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "java.lang_Runtime"
    mbean = "java.lang:type=Runtime"
    paths = ["Uptime","StartTime"]
  
  [[inputs.jolokia2_agent.metric]]
    name = "java.lang_Threading"
    mbean = "java.lang:type=Threading"
    paths = ["TotalStartedThreadCount","CurrentThreadUserTime","PeakThreadCount","CurrentThreadCpuTime","ThreadCount","DaemonThreadCount"]
  

  ##### java.nio #####
  
  [[inputs.jolokia2_agent.metric]]
    name = "java.nio_BufferPool"
    mbean = "java.nio:name=*,type=BufferPool"
    paths = ["TotalCapacity","MemoryUsed","Count"]
    tag_keys = ["name"]
    

  ##### org.apache.ZooKeeperService #####
  
  [[inputs.jolokia2_agent.metric]]
    name = "org.apache.ZooKeeperService"
    mbean = "org.apache.ZooKeeperService:name0=*"
    tag_keys = ["name0"]
      
  [[inputs.jolokia2_agent.metric]]
    name = "org.apache.ZooKeeperService"
    mbean = "org.apache.ZooKeeperService:name0=*,name1=*"
    tag_keys = ["name0","name1"]
      
  [[inputs.jolokia2_agent.metric]]
    name = "org.apache.ZooKeeperService"
    mbean = "org.apache.ZooKeeperService:name0=*,name1=*,name2=*"
    tag_keys = ["name0","name1","name2"]
      
  [[inputs.jolokia2_agent.metric]]
    name = "org.apache.ZooKeeperService"
    mbean = "org.apache.ZooKeeperService:name0=*,name1=*,name2=*,name3=*"
    tag_keys = ["name0","name1","name2","name3"]
      
  [[inputs.jolokia2_agent.metric]]
    name = "org.apache.ZooKeeperService"
    mbean = "org.apache.ZooKeeperService:name0=*,name1=*,name2=*,name3=*,name4=*"
    tag_keys = ["name0","name1","name2","name3","name4"]
      
  [[inputs.jolokia2_agent.metric]]
    name = "org.apache.ZooKeeperService"
    mbean = "org.apache.ZooKeeperService:name0=*,name1=*,name2=*,name3=*,name4=*,name5=*"
    tag_keys = ["name0","name1","name2","name3","name4","name5"]


  [inputs.jolokia2_agent.tags]
    # Creates a tag named 'environment' with the name of the environment to which this Kafka-related component belongs.
    environment = "local"

    # Creates a tag name 'platform' which to simplify the grouping of all Kafka-related components. This should not
    # need to be changed.
    platform = "kafka"
    
    # Creates a tag named 'application' with the name of this Kafka-related component. This should not need to be
    # changed.
    application = "cp-zookeeper"

    # Replace with a name to identify the Zookeeper ensemble to which this Zookeeper instance belongs.
    zk_ensemble = "local"
